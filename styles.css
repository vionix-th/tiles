:root {
  --bg: #0f1221;
  --panel: #161a2d;
  --text: #e8ebff;
  --muted: #9aa3c0;
  --accent: #6bd6ff;
  --accent-2: #9f7bff;
  --good: #57e39f;
  --warn: #ffb84d;
  --danger: #ff6b6b;

  --tile-size: 64px;
  --tile-gap: 10px;
  --board-rotate-x: 30deg;
  --board-rotate-y: 0deg;
  --board-scale: 1;
  --control-h: 36px;
  --radius: 10px;
  --panel-alpha: 0.06;
  --border-alpha: 0.1;
  --safe-bottom: env(safe-area-inset-bottom, 0px);
}

* { box-sizing: border-box; }
html, body, #app { height: 100%; }
html, body { overflow-x: hidden; }
/* Make header/main/footer layout robust without vh math */
#app {
  display: grid;
  grid-template-rows: auto 1fr auto;
  min-height: 100%;
}
body {
  margin: 0;
  background: radial-gradient(1200px 800px at 70% 20%, #18203e, var(--bg));
  color: var(--text);
  font: 14px/1.4 system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
  -webkit-user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}
/* Page background image layer */
#page-bg {
  position: fixed;
  inset: 0;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  opacity: 0.25;
  z-index: -1;
  pointer-events: none;
}

.topbar, .bottombar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px 16px;
  background: linear-gradient(180deg, rgba(255,255,255,0.04), rgba(255,255,255,0.015));
  border-bottom: 1px solid rgba(255,255,255,0.06);
  backdrop-filter: blur(8px);
  box-shadow: 0 8px 28px rgba(0,0,0,0.25);
}
.topbar { position: sticky; top: 0; z-index: 20; }
.bottombar { border-top: 1px solid rgba(255,255,255,0.06); border-bottom: none; }
h1, .controls, .stats { min-width: 0; }
.topbar { flex-wrap: wrap; gap: 8px; }

h1 { font-size: 18px; margin: 0; letter-spacing: 0.3px; }
.controls {
  display: flex; gap: 8px; flex-wrap: wrap;
  background: rgba(255,255,255,var(--panel-alpha));
  border: 1px solid rgba(255,255,255,var(--border-alpha));
  border-radius: var(--radius);
  padding: 6px 8px;
}
.stats { display: flex; gap: 16px; color: var(--muted); }
.stats strong { color: var(--text); }
/* Stats as subtle badges */
.stats span {
  background: rgba(255,255,255,0.05);
  border: 1px solid rgba(255,255,255,0.08);
  padding: 4px 8px;
  border-radius: 999px;
}

.btn {
  background: linear-gradient(180deg, #2a2f4f, #1b1f36);
  color: var(--text);
  border: 1px solid rgba(255,255,255,0.1);
  border-radius: var(--radius);
  padding: 0 12px;
  height: var(--control-h);
  line-height: var(--control-h);
  cursor: pointer;
  transition: transform 120ms ease, box-shadow 120ms ease, background 120ms ease;
}
.btn:hover { transform: translateY(-1px); box-shadow: 0 8px 16px rgba(0,0,0,0.25); }
.btn:active { transform: translateY(0); }
.btn:focus-visible { outline: 2px solid rgba(107,214,255,0.6); outline-offset: 2px; }

/* Primary action styling */
#newGameBtn.btn {
  background: linear-gradient(180deg, #4db3ff, #2a6ed1);
  border-color: rgba(255,255,255,0.18);
  color: #07152e;
}
#newGameBtn.btn:hover { box-shadow: 0 10px 18px rgba(42,110,209,0.45); }

.ctrl-group { display: inline-flex; align-items: center; gap: 6px; }
.sr { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); border: 0; }
.sel {
  appearance: none;
  background: linear-gradient(180deg, #2a2f4f, #1b1f36);
  color: var(--text);
  border: 1px solid rgba(255,255,255,0.1);
  border-radius: var(--radius);
  padding: 0 10px;
  height: var(--control-h);
  line-height: var(--control-h);
  cursor: pointer;
}
/* Number input styling and spinner removal */
input[type="number"].sel { width: 88px; text-align: center; }
input[type="number"].sel::-webkit-outer-spin-button,
input[type="number"].sel::-webkit-inner-spin-button { -webkit-appearance: none; margin: 0; }
input[type="number"].sel { -moz-appearance: textfield; }

.game-area {
  position: relative;
  /* Fill the flexible middle row provided by #app grid */
  display: grid;
  place-items: center;
  padding: 12px;
  /* Allow the center area to truly be the space between header/footer */
  min-height: 0;
  min-width: 0;
  overflow: hidden; /* prevent accidental overflow on small screens */
}

#board-wrapper {
  position: relative;
  /* Size relative to container, not viewport, to avoid overflow */
  width: 100%;
  height: 100%;
  max-width: 1280px;
  max-height: 920px;
  perspective: 1100px;
  user-select: none;
  overflow: visible; /* allow rotated board edges/paths to render fully */
  /* Allow custom pinch-zoom via Pointer Events without browser zoom */
  touch-action: none;
}

.board {
  position: absolute;
  inset: 0;
  margin: auto;
  display: grid;
  grid-template-columns: repeat(var(--cols), var(--tile-size));
  grid-template-rows: repeat(var(--rows), var(--tile-size));
  gap: var(--tile-gap);
  padding: var(--tile-gap);
  width: max-content;
  height: max-content;
  transform-style: preserve-3d;
  /* Nudge board up by half a tile for better vertical balance */
  transform: translateY(calc(-0.5 * var(--tile-size))) translateZ(0) rotateX(var(--board-rotate-x)) rotateY(var(--board-rotate-y)) scale(var(--board-scale));
  transition: transform 200ms ease;
  will-change: transform;
}

.overlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  transform-style: preserve-3d;
}

.toast {
  position: absolute;
  left: 50%;
  bottom: 10px;
  transform: translateX(-50%);
  background: rgba(0,0,0,0.55);
  border: 1px solid rgba(255,255,255,0.12);
  color: var(--text);
  padding: 8px 12px;
  border-radius: 10px;
  box-shadow: 0 8px 18px rgba(0,0,0,0.35);
  opacity: 0;
  transition: opacity 200ms ease, transform 200ms ease;
  pointer-events: none;
  white-space: nowrap;
}
.toast.show { opacity: 1; transform: translateX(-50%) translateY(-4px); }

/* In-game floating controls (Shuffle, Hint) */
.ingame-controls {
  position: fixed; /* bottom-centered, independent of board */
  left: 50%;
  bottom: calc(6px + var(--safe-bottom));
  transform: translateX(-50%);
  display: flex;
  flex-direction: row; /* horizontal alignment */
  gap: 10px;
  z-index: 50; /* above board/overlay */
  pointer-events: none; /* let children decide */
}
.ingame-controls .btn { pointer-events: auto; }
.btn.fab {
  height: 40px;
  min-width: 40px;
  padding: 0 12px;
  border-radius: 999px;
  background: linear-gradient(180deg, #3a406a, #222745);
  box-shadow: 0 10px 20px rgba(0,0,0,0.35);
}

/* Modal dialog for Menu */
.dialog[aria-hidden="true"] { display: none; }
.dialog {
  position: fixed;
  inset: 0;
  z-index: 40;
  display: grid;
  place-items: center;
}
.dialog-backdrop {
  position: absolute;
  inset: 0;
  background: rgba(0,0,0,0.45);
  backdrop-filter: blur(2px);
}
.dialog-content {
  position: relative;
  background: var(--panel);
  border: 1px solid rgba(255,255,255,var(--border-alpha));
  border-radius: 14px;
  width: min(92vw, 560px);
  color: var(--text);
  box-shadow: 0 24px 60px rgba(0,0,0,0.45);
}
.dialog-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px 14px;
  border-bottom: 1px solid rgba(255,255,255,0.08);
}
.dialog-body { padding: 14px; display: grid; gap: 12px; }
.dialog-row { display: flex; align-items: center; gap: 10px; flex-wrap: wrap; }
.btn.btn-ghost {
  background: transparent;
  border: 1px solid rgba(255,255,255,0.12);
  height: 32px; width: 32px; padding: 0; border-radius: 8px;
}

.cell {
  position: relative;
  width: var(--tile-size);
  height: var(--tile-size);
  transform-style: preserve-3d;
}

.tile {
  position: absolute;
  inset: 0;
  display: grid;
  place-items: center;
  border-radius: 12px;
  background: linear-gradient(180deg, #fefefe, #e9ecf9 50%, #cdd6ff);
  color: #1d2250;
  border: 1px solid rgba(13, 17, 40, 0.2);
  box-shadow:
    0 12px 18px rgba(0,0,0,0.25),
    inset 0 2px 0 rgba(255,255,255,0.6),
    inset 0 -2px 0 rgba(0,0,0,0.05);
  transform: translateZ(10px);
  transition: transform 150ms ease, box-shadow 150ms ease, filter 150ms ease, opacity 200ms ease;
}
.tile img {
  display: block;
  max-width: clamp(60%, 72%, 82%);
  max-height: clamp(60%, 72%, 82%);
  width: auto; height: auto;
  object-fit: contain;
  filter: drop-shadow(0 2px 4px rgba(0,0,0,0.15));
}

/* SpriteSheet mode: each tile shows a region of one big image */
.tile.sprite {
  background-image: var(--sheet-image);
  background-repeat: no-repeat;
  /* background-size is set to N*100% so each frame maps to tile bounds */
  background-size: calc(var(--sheet-cols, 1) * 100%) calc(var(--sheet-rows, 1) * 100%);
}

.tile::after {
  content: "";
  position: absolute;
  inset: -2px;
  border-radius: 14px;
  background: linear-gradient(180deg, rgba(255,255,255,0.6), rgba(255,255,255,0));
  transform: translateZ(-9px);
  filter: blur(6px);
  opacity: 0.4;
}

.tile:hover { transform: translateZ(16px) scale(1.02); }
.tile.selected {
  outline: 2px solid var(--accent);
  box-shadow: 0 20px 28px rgba(0,0,0,0.35), 0 0 0 3px rgba(107,214,255,0.35) inset;
}
.tile.matched { opacity: 0; pointer-events: none; transform: translateZ(0) scale(0.9); }
.tile.dim { filter: saturate(0.1) brightness(0.9); }

/* Per-tile feedback animations */
@keyframes fail-shake {
  0%, 100% { transform: translateZ(10px) translateX(0); }
  20% { transform: translateZ(10px) translateX(-6px); }
  40% { transform: translateZ(10px) translateX(6px); }
  60% { transform: translateZ(10px) translateX(-4px); }
  80% { transform: translateZ(10px) translateX(4px); }
}
@keyframes success-pop {
  0% { transform: translateZ(10px) scale(1); }
  40% { transform: translateZ(14px) scale(1.08); }
  100% { transform: translateZ(10px) scale(1); }
}
.tile.anim-fail { animation: fail-shake 280ms ease; box-shadow: 0 0 0 3px rgba(255,107,107,0.7) inset, 0 16px 24px rgba(0,0,0,0.35); }
.tile.anim-success { animation: success-pop 240ms ease; box-shadow: 0 0 0 3px rgba(87,227,159,0.7) inset, 0 18px 26px rgba(0,0,0,0.35); }

/* Connection path lines */
.path-seg {
  position: absolute;
  background: linear-gradient(90deg, var(--accent), var(--accent-2));
  box-shadow: 0 4px 12px rgba(0,0,0,0.35);
  border-radius: 999px;
  transform-origin: left center;
  height: 6px;
  will-change: transform, opacity;
  opacity: 0.9;
}

/* FX overlay and screen-wide effects */
.fx {
  position: absolute;
  inset: 0;
  pointer-events: none;
  overflow: hidden;
}
.confetti {
  position: absolute;
  width: 10px; height: 14px;
  opacity: 0.92;
  transform: translateY(-20px) rotate(0deg);
  animation: confetti-fall linear forwards;
  border-radius: 2px;
}
@keyframes confetti-fall {
  0% { transform: translateY(-20px) rotate(0); }
  100% { transform: translateY(120%) rotate(540deg); }
}
@keyframes win-bounce {
  0% { transform: translateZ(0) rotateX(var(--board-rotate-x)) rotateY(var(--board-rotate-y)) scale(1); }
  30% { transform: translateZ(0) rotateX(calc(var(--board-rotate-x) - 2deg)) rotateY(var(--board-rotate-y)) scale(1.04); }
  60% { transform: translateZ(0) rotateX(calc(var(--board-rotate-x) + 1deg)) rotateY(var(--board-rotate-y)) scale(1.02); }
  100% { transform: translateZ(0) rotateX(var(--board-rotate-x)) rotateY(var(--board-rotate-y)) scale(1); }
}
@keyframes lose-shake {
  0%, 100% { transform: translateZ(0) rotateX(var(--board-rotate-x)) rotateY(var(--board-rotate-y)); }
  20% { transform: translateZ(0) rotateX(var(--board-rotate-x)) rotateY(calc(var(--board-rotate-y) - 2deg)); }
  40% { transform: translateZ(0) rotateX(var(--board-rotate-x)) rotateY(calc(var(--board-rotate-y) + 2deg)); }
  60% { transform: translateZ(0) rotateX(var(--board-rotate-x)) rotateY(calc(var(--board-rotate-y) - 1deg)); }
  80% { transform: translateZ(0) rotateX(var(--board-rotate-x)) rotateY(calc(var(--board-rotate-y) + 1deg)); }
}
.victory .board { animation: win-bounce 700ms ease; }
.defeat .board { animation: lose-shake 600ms ease; filter: grayscale(0.6) saturate(0.6) brightness(0.9); }
.defeat .fx::before {
  content: "";
  position: absolute; inset: 0;
  background: radial-gradient(ellipse at center, rgba(255,0,0,0.08), rgba(0,0,0,0.6));
}

.help { color: var(--muted); opacity: 0.9; padding: 6px 10px; }

@media (max-width: 900px) {
  :root { --tile-size: 56px; }
}
@media (max-width: 820px) {
  h1 { display: none; }
}
@media (max-width: 768px) {
  :root { --tile-size: 48px; --tile-gap: 8px; }
  /* keep controls centered at bottom on small screens */
  .ingame-controls { left: 50%; transform: translateX(-50%); bottom: calc(6px + var(--safe-bottom)); }
  .topbar, .bottombar { padding: 8px 10px; }
  .controls { padding: 4px 6px; }
  :root { --control-h: 32px; }
  .stats { gap: 8px; }
  .stats span { padding: 2px 6px; }
  /* Move stats out of header flow to prevent overflow */
  .stats { position: fixed; top: 8px; right: 8px; z-index: 30; background: none; border: 0; }
  .stats span { display: none; }
  .stats span:nth-child(2), .stats span:nth-child(3) { display: inline-flex; }
}

/* Very small phones: condense labels, reduce tilt, tighten gaps */
@media (max-width: 560px) {
  :root { --tile-gap: 6px; --board-rotate-x: 18deg; }
  .stats { gap: 6px; font-size: 12px; }
  /* Reduce chrome padding further */
  .topbar, .bottombar { padding: 6px 8px; }
  .controls { padding: 2px 4px; }
  .btn { height: 34px; line-height: 34px; }
  .btn.fab { height: 38px; min-width: 38px; }
  .game-area { padding: 8px; }
  /* Fullscreen-like dialog */
  .dialog { align-items: end; }
  .dialog-content { width: 100%; max-width: none; margin: 0; border-radius: 14px 14px 0 0; max-height: 90svh; overflow: auto; }
  .dialog-body { padding: 12px; }
  .dialog-row { flex-direction: column; align-items: stretch; }
  .ctrl-group { width: 100%; justify-content: space-between; }
  .sel, input.sel { width: 100%; }
}
@media (max-width: 420px) {
  :root { --tile-gap: 4px; --board-rotate-x: 22deg; --control-h: 30px; }
  .btn.fab { height: 36px; min-width: 36px; }
}

/* Tight vertical space: flatten perspective slightly */
@media (max-height: 600px) {
  :root { --board-rotate-x: 24deg; }
}
@media (max-height: 500px) {
  :root { --board-rotate-x: 20deg; --tile-gap: 4px; }
}

/* Use small viewport unit on very small phones to avoid URL bar jumps */
@media (max-width: 560px) {
  html, body, #app { min-height: 100svh; }
}

/* Orientation-specific board sizing for better fit */
@media (orientation: portrait) {
  #board-wrapper { max-width: 680px; max-height: 920px; }
}
@media (orientation: landscape) {
  #board-wrapper { max-width: 1280px; max-height: 780px; }
}

/* Performance mode for large grids */
.perf .tile {
  box-shadow: none;
  background: #e9ecf9;
  transition: transform 80ms ease, opacity 160ms ease;
}
.perf .tile::after { display: none; }
.perf .tile:hover { transform: none; }
.perf .path-seg { box-shadow: none; height: 3px; opacity: 0.8; }
.perf .confetti { width: 8px; height: 10px; }

/* Drag rotate removed; no dragging state needed */
